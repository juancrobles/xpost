% Type 3 font handling

(loading font.ps)print

/definefont {
    dup type /dicttype ne
    2 index type /nametype ne or {
        /definefont cvx /typecheck signalerror
    } if
    {
        dup /FontMatrix known not {stopped} if
        dup /FontType known not {stopped} if
        dup /FontMatrix known not {stopped} if
        dup /Encoding known not {stopped} if
        dup /BuildChar known not {stopped} if
    } stopped {
        /definefont cvx /invalidfont signalerror
    } if
    dup /FontName 3 index put
    FontDirectory exch 2 index exch put
    findfont
} def

/scalefont {
    1 index /FontType get 3 ne { //scalefont }{
    } ifelse
} def

/makefont {
    1 index /FontType get 3 ne { //makefont }{
    } ifelse
} def

/show {
    graphicsdict /currgstate get /currfont get
    dup /FontType get 3 ne { pop //show }{
    } ifelse
} def

/widthshow {
    graphicsdict /currgstate get /currfont get
    dup /FontType get 3 ne { pop //widthshow }{
    } ifelse
} def

/ashow {
    graphicsdict /currgstate get /currfont get
    dup /FontType get 3 ne { pop //ashow }{
    } ifelse
} def

/awidthshow {
    graphicsdict /currgstate get /currfont get
    dup /FontType get 3 ne { pop //awidthshow }{
    } ifelse
} def

/kshow {
    graphicsdict /currgstate get /currfont get
    dup /FontType get 3 ne { pop //kshow }{
    } ifelse
} def

(eof font.ps)print

